<?xml version="1.0" encoding="UTF-8" ?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">
    <service verb="create" noun="MoquiTraining" type="entity-auto">
        <in-parameters>
        <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" type="Timestamp" format="yyyy-MM-dd"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
    </service>

    <service verb="create" noun="MoquiTrainingInline">
        <in-parameters>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" type="Timestamp" format="yyyy-MM-dd"/>
            <parameter name="trainingPrice"/>
            <parameter name="trainingDuration"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
        <actions>
            <service-call name="create#MoquiTraining" in-map="context"/>
        </actions>
    </service>

    <service verb="create" noun="MoquiTrainingGroovy" type="script"
             location="component://moqui-training/service/Train.groovy">
        <in-parameters>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
    </service>

    <service verb="find" noun="TrainingData">
        <in-parameters>
            <parameter name="trainingName"/>
        </in-parameters>
        <out-parameters>
            <parameter name="trainingInfo" type="list"/>
        </out-parameters>

        <actions>
            <entity-find entity-name="MoquiTraining" list="trainingInfo">
                <econdition field-name="trainingName"/>
                <select-field field-name="trainingName,trainingId,trainingDate,trainingPrice,trainingDuration"/>
            </entity-find>
        </actions>
    </service>

    <service verb="store" noun="TrainingUpdate">
        <description>Create or update MoquiTraining records based on trainingName or trainingId.</description>

        <in-parameters>
            <parameter name="trainingId" required="true"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate" type="Timestamp"/>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
        </in-parameters>

        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>

        <actions>
            <entity-find-one entity-name="MoquiTraining" value-field="existingRecord">
                <field-map field-name="trainingId" from="trainingId"/>
            </entity-find-one>

            <if condition="existingRecord">
                <then>
                    <set field="existingRecord.trainingDate" from="trainingDate"/>

                    <set field="existingRecord.trainingName" from="trainingName"/>
                    <set field="existingRecord.trainingPrice" from="trainingPrice"/>
                    <set field="existingRecord.trainingDuration" from="trainingDuration"/>
                    <!-- Update the existing record -->
                    <entity-update value-field="existingRecord"/>

                    <set field="trainingId" from="existingRecord.trainingId"/>
                </then>
                <else>
                    <service-call name="create#MoquiTraining" in-map="context" out-map="context"/>
                </else>
            </if>
        </actions>
    </service>
</services>
